A) Requêtes

1) SELECT nom_lieu AS nomLieu FROM lieu WHERE nom_lieu LIKE '%um';

2) SELECT nom_personnage FROM personnage INNER JOIN lieu ON personnage.id_lieu = lieu.id_lieu ORDER BY COUNT(*) DESC;

3) SELECT p.nom_personnage, nom_specialite, p.adresse_personnage, nom_lieu FROM personnage p 
INNER JOIN lieu l ON p.id_lieu = l.id_lieu
INNER JOIN specialite s ON p.id_specialite = s.id_specialite ORDER BY l, p.nom_personnage;

4) SELECT COUNT(*) FROM personnage p
INNER JOIN specialite s ON p.id_specialite = s.id_specialite ORDER BY COUNT(p.id_personnage) DESC;

5) SELECT b.nom_bataille, DATE_FORMAT(b.date_bataille, '%e/%m/%y'), l.nom_lieu FROM bataille
b INNER JOIN lieu l ON b.id_lieu = l.id_lieu ORDER BY date_bataille ASC;

6) SELECT p.nom_potion, SUM(c.qte * i.cout_ingredient) AS cout FROM potion p
INNER JOIN composer c ON p.id_potion = c.id_potion
INNER JOIN ingredient i ON c.id_ingredient = i.id_ingredient
GROUP BY p.nom_potion
HAVING cout
ORDER BY cout DESC

7) SELECT ANY_VALUE(i.nom_ingredient), SUM(c.qte * i.cout_ingredient) AS cout, ANY_VALUE(c.qte), p.nom_potion FROM ingredient i
INNER JOIN composer c ON i.id_ingredient = c.id_ingredient
INNER JOIN potion p ON c.id_potion = p.id_potion
WHERE p.nom_potion = 'Santé'
GROUP BY i.nom_ingredient
HAVING cout

8) SELECT ANY_VALUE(p.nom_personnage), b.nom_bataille, SUM(pc.qte) AS casques FROM personnage p
INNER JOIN prendre_casque pc ON p.id_personnage = pc.id_personnage
INNER JOIN bataille b ON pc.id_bataille = b.id_bataille
WHERE b.nom_bataille = 'Bataille du village gaulois'
GROUP BY p.nom_personnage
HAVING casques

9) SELECT p.nom_personnage, SUM(b.dose_boire) AS bu FROM boire b
INNER JOIN personnage p ON b.id_personnage = p.id_personnage
GROUP BY p.nom_personnage
HAVING bu
ORDER BY bu DESC

10) SELECT ANY_VALUE(b.nom_bataille), SUM(pc.qte) AS cp FROM prendre_casque pc
INNER JOIN bataille b ON pc.id_bataille = b.id_bataille
GROUP BY b.nom_bataille
HAVING cp
ORDER BY cp DESC
LIMIT 1

11) SELECT COUNT(tc.type_casque), c.cout_casque FROM type_casque tc
INNER JOIN casque c ON tc.id_type_casque = c.id_type_casque
ORDER BY tc.type_casque, c.cout_casque DESC;

12) SELECT p.nom_potion FROM potion p
INNER JOIN composer c ON p.id_potion = c.id_potion
INNER JOIN ingredient i ON c.id_ingredient = i.id_ingredient
WHERE i.nom_ingredient = 'poisson frais';

13) SELECT COUNT(*) AS persos FROM personnage p
INNER JOIN lieu l ON p.id_lieu = l.id_lieu
WHERE l.nom_lieu != 'village gaulois'
ORDER BY persos
LIMIT 5

14) SELECT p.nom_personnage FROM personnage p
INNER JOIN boire b ON p.id_personnage = b.id_personnage
WHERE b.dose_boire = 0;

15) SELECT nom_personnage FROM personnage p
LEFT JOIN autoriser_boire ab
ON ab.id_personnage=p.id_personnage
WHERE ab.id_personnage IS NULL

B) Modifier

a) SELECT l.id_lieu AS lieu_id FROM lieu l WHERE nom_lieu = 'Rotonmagus'
INSERT INTO personnage (nom_personnage, adresse_personnage, id_lieu) VALUES ('Champdeblix', 'ferme Hantassion', lieu_id);

b) SELECT p.id_personnage AS personnage_id FROM personnage p WHERE nom_personnage = 'Bonemine';
SELECT po.id_potion AS potion_id FROM potion po WHERE nom_potion = 'Magique';
INSERT INTO autoriser_boire (id_potion, id_personnage) VALUES (personnage_id, potion_id);

c) SELECT id_type_casque AS type_casque_id FROM type_casque WHERE nom_type_casque = 'Grec';
SELECT id_casque AS casque_id FROM casque WHERE id_type_casque = type_casque_id
DELETE FROM casque WHERE prendre_casque.id_casque = casque_id IS NULL; 

d) SELECT l.id_lieu AS lieu_id FROM lieu l WHERE nom_lieu = 'Condate';
UPDATE personnage SET adresse_personnage = 'prison', id_lieu = lieu_id
WHERE nom_personnage = 'Zérozérosix';

e) SELECT p.id_potion AS potion_id FROM potion p WHERE nom_potion = 'Soupe';
SELECT i.id_ingredient AS ingredient_id FROM ingredient i WHERE nom_ingredient = 'persil';
DELETE FROM composer WHERE id_ingredient = ingredient_id AND id_potion = potion_id;

f) SELECT p.id_personnage AS personnage_id FROM personnage p WHERE nom_personnage = 'Obélix';
SELECT b.id_bataille AS bataille_id FROM bataille b WHERE nom_bataille = 'Attaque de la banque postale';
SELECT tc.id_type_casque AS type_casque_id FROM type_casque tc WHERE nom_type_casque = 'Weisenau';
SELECT c.id_casque AS casque_id FROM casque c WHERE id_type_casque = type_casque_id;
UPDATE prendre_casque SET id_casque = casque_id, id_type_casque = type_casque_id
WHERE id_personnage = personnage_id;